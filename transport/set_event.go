// Code generated by proto-gen-svc-transport. DO NOT EDIT.
// Folder	: "github.com/LukmanulHakim18/time2go/contract"
// File		: "contract/time2go.proto"

package transport

import (
	"context"
	commonMetadata "git.bluebird.id/mybb-ms/aphrodite/metadata"
	"github.com/LukmanulHakim18/time2go/util/interceptor"

	"github.com/LukmanulHakim18/time2go/contract"
	"go.elastic.co/apm/v2"
)

func (t transport) SetEvent(ctx context.Context, request *contract.Event) (response *contract.DefaultResponse, err error) {
	// Init trace-id for tracing request
	ctx = commonMetadata.InitiateTraceId(ctx)

	span, ctx := apm.StartSpan(ctx, "transport.SetEvent", "transport.internal")
	md := commonMetadata.GetMetaDataFromContext(ctx)
	span.Context.SetLabel("request", request)
	span.Context.SetLabel("metadata", md)
	defer span.End()

	validateMetadata := interceptor.GetvalidateMetadataInterceptor(nil)

	if err = validateMetadata.Do(ctx, request); err != nil {
		return
	}

	// * Bridging to usecase related method
	response, err = t.UseCase.SetEvent(ctx, request)
	apm.CaptureError(ctx, err).Send()
	return response, err
}
